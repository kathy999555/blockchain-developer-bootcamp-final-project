Solidity architecture

Function names and input and outputs:
contractAddress = marketplaceAddress
Function create ticket(string memory ticketURI) public returns(uint) {
	_ticketIds.increment();
	uint256 newTicketId = _ticketIds.current();
	_mint(msg.sender, newTicketId);
_setTicketURI(newTicketId, ticketURU);
setApprovalForAll(contractAddress, true);
return newTicketId;
}
Counters
Address payable owner
Uint256 listingPrice = ___eth
constructor() {
Owner = payable(msg.sender);
}
Function createTicket(
	Address ticketContract,
	Uint256 ticketId,
Uint256 price
) public payable nonReentrant {
	Require(price > 0);
Require (msg.value == listingPrice);
_tokenIds.increment();
Uint256 tokenId = _tokenIds.current();
}
Function createMarketSale(
Address ticketContract,
Uint256 ticketId
) public payable nonReentrant {
}
Function fetchMarketItems() public view returns (MarketItem[] memory) {}
Function fetchMyTickets() public view returns (MarketItem[] memory) {}
Function fetchTicketsCreated() public view returns (MarketItem[] memory) {}

